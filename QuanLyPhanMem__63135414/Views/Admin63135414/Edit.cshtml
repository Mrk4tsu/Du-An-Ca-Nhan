@model QuanLyPhanMem__63135414.Models.User

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";

    <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
    <script type="text/javascript">
        $(function () {
            var fileupload = $("#Avatar");
            var image = $("#FileUpload");
            image.click(function () {
                fileupload.click();
            });
            fileupload.change(function () {
                var fileName = $(this).val().split('\\')[$(this).val().split('\\').length - 1];
                document.getElementById("userAvatar").value = fileName;
            });
        });
    </script>
}

<h2>Edit</h2>
@using (Html.BeginForm("Edit", "Admin63135414", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="row flex-wrap justify-content-center align-items-center">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <div class="py-2">
                        <h4 class="text-primary text-uppercase">Tạo người dùng mới</h4>
                    </div>
                </div>
                <div class="card-body">
                    <form>
                        <div class="row">
                            <div class="col-md-5 rounded-3" style="background-color: #E0E9DB">
                                <div class="row mt-3">
                                    <!-- Nội dung phía trên ảnh -->
                                    <div class="position-relative">
                                        <img src="~/assets/wallpaper/defaultwallpaper.png" alt="Background Image" class="img-fluid rounded-5" id="userWallpaper-preview" style="height: 100%; width:100%;" />

                                        <!-- Ảnh dạng tròn đè lên ảnh -->
                                        <div class="position-absolute top-150 start-50 translate-middle">
                                            <img src="~/assets/avatar/avatardefault.png" alt="Circular Image" class="rounded-5" id="userAvatar-preview" style="height:150px; border: 5px solid #fff;" />
                                        </div>

                                    </div>
                                </div>
                                <br />
                                <div class="row mt-5">
                                    <div class="col-md-6 mt-3">
                                        <div class="form-floating">
                                            <div class="input-group">
                                                <input type="file" class="form-control" name="Avatar" id="Avatar" accept="image/*" onchange="previewImage(this)" />
                                                <label class="input-group-text" for="Avatar">Upload</label>
                                            </div>
                                            @Html.EditorFor(model => model.userAvatar, new { htmlAttributes = new { @class = "form-control", @style = "display:none;" } })
                                        </div>
                                    </div>
                                    <div class="col-md-6 mt-3">
                                        <div class="form-floating">
                                            <div class="input-group">
                                                <input class="form-control" id="userWallpaper" type="file" name="userWallpaper" accept="image/*" onchange="previewImage(this)" />
                                                <label class="input-group-text" for="userWallpaper">Wallpaper</label>
                                            </div>
                                            @Html.EditorFor(model => model.userWallpaper, new { htmlAttributes = new { @class = "form-control", @style = "display:none;" } })
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-4">
                                <div class="form-floating mt-3 mb-3">
                                    @Html.HiddenFor(model => model.userId)
                                    <input type="text" value="@ViewBag.USERID" disabled readonly class="form-control" />
                                    @Html.ValidationMessageFor(model => model.userId, "", new { @class = "text-danger" })
                                    @Html.LabelFor(model => model.userId, "ID Người dùng", htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="form-floating mt-3 mb-3">
                                    @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                                    @Html.LabelFor(model => model.email, "Địa chỉ Email", htmlAttributes: new { @class = "control-label" })
                                </div>
                                <!--Mật khẩu cũ-->
                                <div class="form-floating mt-3 mb-3" style="display:none">
                                    @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                                    @Html.LabelFor(model => model.password, "Mật khẩu", htmlAttributes: new { @class = "control-label" })
                                </div>
                                <!--Mật khẩu mới-->
                                <div class="form-floating mt-3 mb-3">
                                    <input type="password" value="@ViewBag.CurrentPass" name="newPassword" class="form-control" />
                                    <label>Mật khẩu</label>
                                </div>
                                <div class="form-floating mt-3 mb-3">
                                    @Html.DropDownList("roleId", ViewBag.Roles as SelectList, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.UserRole.roleId, "", new { @class = "text-danger" })
                                    @Html.LabelFor(model => model.UserRole.roleId, "Vai trò", htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="form-floating mt-3 mb-3">
                                    @Html.HiddenFor(model => model.codeActive)
                                    <input type="text" value="@ViewBag.CodeActive" disabled readonly class="form-control" />
                                    @Html.ValidationMessageFor(model => model.codeActive, "", new { @class = "text-danger" })
                                    @Html.LabelFor(model => model.codeActive, "ID Người dùng", htmlAttributes: new { @class = "control-label" })
                                </div>
                            </div>

                            <div class="col-md-3">
                                <div class="form-floating mt-3 mb-3">
                                    @Html.EditorFor(model => model.firstname, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.firstname, "", new { @class = "text-danger" })
                                    @Html.LabelFor(model => model.firstname, "Họ người dùng", htmlAttributes: new { @class = "control-label" })
                                </div>

                                <div class="form-floating mt-3 mb-3">
                                    @Html.EditorFor(model => model.lastname, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.lastname, "", new { @class = "text-danger" })
                                    @Html.LabelFor(model => model.lastname, "Tên người dùng", htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="form-floating mt-3 mb-3">
                                    @Html.EditorFor(model => model.birthday, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.birthday, "", new { @class = "text-danger" })
                                    @Html.LabelFor(model => model.birthday, "Ngày sinh", htmlAttributes: new { @class = "control-label" })
                                </div>

                                <div class="form-floating mt-3 mb-3">
                                    @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
                                    @Html.LabelFor(model => model.address, "Địa chỉ", htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="form-floating mt-3 mb-3">
                                    @Html.EditorFor(model => model.phoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.phoneNumber, "", new { @class = "text-danger" })
                                    @Html.LabelFor(model => model.phoneNumber, "Số điện thoại", htmlAttributes: new { @class = "control-label" })
                                </div>
                            </div>
                            <div class="col">
                                <div class="form-floating mt-3 mb-3">
                                    @Html.TextAreaFor(model => model.bio, new { @class = "form-control", rows = 4 }) <!-- Điều chỉnh số hàng (rows) theo nhu cầu của bạn -->
                                    @Html.ValidationMessageFor(model => model.bio, "", new { @class = "text-danger" })
                                    @Html.LabelFor(model => model.bio, "Mô tả", htmlAttributes: new { @class = "control-label" })
                                </div>
                            </div>
                        </div>

                    </form>
                </div>
                <div class="card-footer">
                    <div class="row">
                        <input type="submit" value="Hoàn tất chỉnh sửa" class="btn btn-facebook btn-rounded col-md-5 mx-auto" />
                        <a href="@Url.Action("ListUser")" class="btn btn-success btn-rounded col-md-5 mx-auto">
                            Quay lại danh sách
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@*@using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>User</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            @Html.HiddenFor(model => model.userId)

            <div class="form-group">
                @Html.LabelFor(model => model.roleId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.roleId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.roleId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.firstname, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.firstname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.firstname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.lastname, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.lastname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.lastname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.userAvatar, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.userAvatar, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.userAvatar, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.userWallpaper, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.userWallpaper, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.userWallpaper, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.birthday, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.birthday, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.birthday, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.phoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.phoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.phoneNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.bio, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.bio, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.bio, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.codeActive, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.codeActive, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.codeActive, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.isActive, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.isActive, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.isActive, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }*@

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
