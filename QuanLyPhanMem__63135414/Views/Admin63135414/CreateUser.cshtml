@model QuanLyPhanMem__63135414.Models.User

@{
    ViewBag.Title = "CreateUser";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<h2>CreateUser</h2>


@using (Html.BeginForm("CreateUser", "Admin63135414", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>User</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-floating mt-3 mb-3">
            <input type="text" value="@ViewBag.USERID" disabled readonly class="form-control" />
            @Html.ValidationMessageFor(model => model.userId, "", new { @class = "text-danger" })
            @Html.LabelFor(model => model.userId, "ID Người dùng", htmlAttributes: new { @class = "control-label" })
        </div>
        <div class="form-floating mt-3 mb-3">
            @Html.DropDownList("roleId", ViewBag.Roles as SelectList, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.UserRole.roleId, "", new { @class = "text-danger" })
            @Html.LabelFor(model => model.UserRole.roleId, "Vai trò", htmlAttributes: new { @class = "control-label" })
        </div>

        <div class="form-floating mt-3 mb-3">

            @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
            @Html.LabelFor(model => model.email, "Địa chỉ Email", htmlAttributes: new { @class = "control-label" })
        </div>

        <div class="form-floating mt-3 mb-3">
            @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
            @Html.LabelFor(model => model.password, "Mật khẩu", htmlAttributes: new { @class = "control-label" })
        </div>
        <div class="form-floating mt-3 mb-3">
            @Html.EditorFor(model => model.confirmPassword, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.confirmPassword, "", new { @class = "text-danger" })
            @Html.LabelFor(model => model.confirmPassword, "Xác nhận mật khẩu", htmlAttributes: new { @class = "control-label" })
        </div>
        <div class="form-floating mt-3 mb-3">
            @Html.EditorFor(model => model.firstname, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.firstname, "", new { @class = "text-danger" })
            @Html.LabelFor(model => model.firstname, "Họ người dùng", htmlAttributes: new { @class = "control-label" })
        </div>

        <div class="form-floating mt-3 mb-3">
            @Html.EditorFor(model => model.lastname, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.lastname, "", new { @class = "text-danger" })
            @Html.LabelFor(model => model.lastname, "Tên người dùng", htmlAttributes: new { @class = "control-label" })
        </div>

        <div>
            <div class="input-group">
                <input class="form-control" id="userAvatar" type="file" name="userAvatar" accept="image/*" onchange="previewImage(this)" />
                <label class="input-group-text" for="userAvatar">Đặt ảnh đại diện</label>
            </div>
        </div>

        <div class="form-floating mt-3 mb-3">
            <div class="input-group">
                <input class="form-control" id="userWallpaper" type="file" name="userWallpaper" accept="image/*" onchange="previewImage(this)" />
                <label class="input-group-text" for="userWallpaper">Đặt ảnh bìa</label>
            </div>
        </div>

        <div class="form-floating mt-3 mb-3">
            @Html.EditorFor(model => model.birthday, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.birthday, "", new { @class = "text-danger" })
            @Html.LabelFor(model => model.birthday, htmlAttributes: new { @class = "control-label" })
        </div>

        <div class="form-floating mt-3 mb-3">
            @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
            @Html.LabelFor(model => model.address, htmlAttributes: new { @class = "control-label" })
        </div>

        <div class="form-floating mt-3 mb-3">
            @Html.EditorFor(model => model.phoneNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.phoneNumber, "", new { @class = "text-danger" })
            @Html.LabelFor(model => model.phoneNumber, htmlAttributes: new { @class = "control-label" })
        </div>

        <div class="form-floating mt-3 mb-3">
            @Html.EditorFor(model => model.bio, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.bio, "", new { @class = "text-danger" })
            @Html.LabelFor(model => model.bio, htmlAttributes: new { @class = "control-label" })
        </div>

        <div class="form-floating mt-3 mb-3">
            <input type="text" value="@ViewBag.CodeActive" disabled readonly class="form-control" />
            @Html.ValidationMessageFor(model => model.codeActive, "", new { @class = "text-danger" })
            @Html.LabelFor(model => model.codeActive, htmlAttributes: new { @class = "control-label" })
        </div>

        <div class="form-floating mt-3 mb-3">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
